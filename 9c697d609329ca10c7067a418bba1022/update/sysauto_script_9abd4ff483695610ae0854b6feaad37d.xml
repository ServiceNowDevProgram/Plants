<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <max_drift/>
        <name>Daily Rain Logger</name>
        <offset/>
        <offset_type>0</offset_type>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2024-10-27 13:07:17</run_start>
        <run_time>1970-01-02 07:50:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[var plant = new GlideRecord("x_snc_plant_mgmt_plants");
plant.addEncodedQuery("locationISNOTEMPTY^rain_in_last_24_hoursISEMPTY^location.longitude<=90^ORlocation.longitude>=-90^location.latitude<=90^ORlocation.latitude>=-90"); //querying plants with location not empty, rain in last 24 hrs field as empty and plants location's longitude and latitude <=90 and greater than -90
plant.query();
while (plant.next()) {
    var longitude = plant.location.longitude; //longitude of the plant's location
    var latitude = plant.location.latitude; //latitude of the plant's location
    try {
        var r = new sn_ws.RESTMessageV2('x_snc_plant_mgmt.Weather API', 'Default GET');
        r.setStringParameterNoEscape('latitude', longitude);
        r.setStringParameterNoEscape('longitude', latitude);

        //override authentication profile 
        //authentication type ='basic'/ 'oauth2'
        //r.setAuthenticationProfile(authentication type, profile name);

        //set a MID server name if one wants to run the message on MID
        //r.setMIDServer('MY_MID_SERVER');

        //if the message is configured to communicate through ECC queue, either
        //by setting a MID server or calling executeAsync, one needs to set skip_sensor
        //to true. Otherwise, one may get an intermittent error that the response body is null
        //r.setEccParameter('skip_sensor', true);

        var response = r.execute();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();
        // Parse the JSON response
        var jsonResponse = JSON.parse(responseBody);

        // Extract precipitation data
        var dailyPrecipitation = jsonResponse.daily.precipitation_sum;
        var precipitationSum = dailyPrecipitation[1]; // For the current day as the scheduled job runs on 23:50:00 which is almost 24 hrs 

        // Log the precipitation data
        gs.info("Location: Latitude: " + latitude + ", Longitude: " + longitude + ", Precipitation: " + precipitationSum + " mm");

        plant.rain_in_last_24_hours = precipitationSum;
        plant.update();

        // You can add further logic here based on the precipitation data

    } catch (ex) {
        var message = ex.message;
    }
}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-27 13:31:27</sys_created_on>
        <sys_id>9abd4ff483695610ae0854b6feaad37d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Daily Rain Logger</sys_name>
        <sys_package display_value="Plant Management" source="x_snc_plant_mgmt">9c697d609329ca10c7067a418bba1022</sys_package>
        <sys_policy/>
        <sys_scope display_value="Plant Management">9c697d609329ca10c7067a418bba1022</sys_scope>
        <sys_update_name>sysauto_script_9abd4ff483695610ae0854b6feaad37d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-27 13:31:27</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
